{
  "bash": {
    "prefix": ["env_", "bash", "#!", "shebang"],
    "body": "${1|#!/bin/bash,#!/usr/bin/env bash,#!/bin/sh,#!/usr/bin/env sh|}\n",
    "description": [
      "Option 1:\n",
      "#!/bin/bash\n",
      "Description: Shebang Bash executor.\n",
      "Option 2:\n",
      "#!/usr/bin/env bash\n",
      "Description: Shell searchs for the first match of bash in the $PATH environment variable.\n",
      "It can be useful if you aren't aware of the absolute path or don't want to search for it.\n"
    ]
  },
  "echo": {
    "prefix": "echo_",
    "body": "echo \"${0:message}\"",
    "description": "echo \"message\""
  },
  "read": {
    "prefix": "read_",
    "body": "read -r ${0:VAR}",
    "description": "read -r $VAR"
  },
  "if": {
    "prefix": "if_",
    "body": "if [[ ${1:condition} ]]; then\n\t${0}\nfi",
    "description": "if [[ condition ]]; then\n\nfi"
  },
  "elseif": {
    "prefix": "elif_",
    "body": "elif [[ ${1:condition} ]]; then\n\t${0}",
    "description": "elif [[ ${1:condition} ]]; then\n\t${0}"
  },
  "else": {
    "prefix": "else_",
    "body": "else\n\t${0:command}",
    "description": "else"
  },
  "for_in": {
    "prefix": "for_in",
    "body": "for ${1:VAR} in ${0:LIST}\ndo\n\techo \"\\$${1:VAR}\"\ndone\n",
    "description": "for loop in list"
  },
  "for_i": {
    "prefix": "for_i",
    "body": "for ((${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++)); do\n\techo \"\\$${0:i}\"\ndone\n",
    "description": "for ((i = 0; i < 10; i++)); do\n\techo \"\\$i\"\ndone\n"
  },
  "while": {
    "prefix": "while_",
    "body": "while [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
    "description": "while [[ condition ]]; do\n\ndone\n"
  },
  "until": {
    "prefix": "until_",
    "body": "until [[ ${1:condition} ]]; do\n\t${0}\ndone\n",
    "description": "until [[ condition ]]; do\n\ndone\n"
  },
  "function": {
    "prefix": "func_",
    "body": "${1:name} ()\n{\n\t${0}\n}",
    "description": "nameFunc()\n{\n\n}"
  },
  "case": {
    "prefix": "case_",
    "body": "case \"\\$${1:VAR}\" in\n\t${2:1}) echo 1\n\t;;\n\t${3:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
    "description": "case \"\\$VAR\" in\n\t${2:1}) echo 1\n\t;;\n\t${3:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n"
  },
  "break": {
    "prefix": "break_",
    "body": "break ${0}",
    "description": "break yourBreak"
  },
  "expr": {
    "prefix": "expr_",
    "body": "expr ${0:1 + 1}",
    "description": "expr ${0:1 + 1} (for calculate with bash)"
  }
}
